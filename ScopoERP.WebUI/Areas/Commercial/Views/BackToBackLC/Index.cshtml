@{
    ViewBag.Title = "Back To Back LC";
}

<div class="col-sm-12">
    <p>
        @Html.ActionLink("Create New Back To Back LC", "Create", "BackToBackLC", null, new { @class = "btn btn-primary btn-lg" })
    </p>

    @using Telerik.Web.Mvc.UI

    @( Html.Telerik().Grid<ScopoERP.Commercial.ViewModel.BackToBackLCViewModel>()
    .Name("BackToBackLCGrid")
        .ToolBar(commands => commands
            .Custom()
                .HtmlAttributes(new { id = "exportLink" })
                .Text("Export")
                    .Action("BackToBackLCExport", "BackToBackLC", new { column = "~", orderBy = "~", filter = "~" }))
    .DataKeys(dataKeys => dataKeys.Add(k => k.BackToBackLCID))
    .DataBinding(dataBinding => dataBinding.Ajax().Select("GetAllBackToBackLC", "BackToBackLC"))
    .Columns(columns =>
    {
        columns.Bound(c => c.BackToBackLCID).ClientTemplate(
            Html.ActionLink("Edit", "Edit", new { id = "<#= BackToBackLCID #>" }, new { @class = "t-button" }).ToHtmlString()
        )
        .Width(80).Title("").Filterable(false);

        columns.Bound(c => c.JobNo).Width(150);

        columns.Bound(c => c.BackToBackLCNo).Width(150);
        columns.Bound(c => c.BackToBackLCDate).Format("{0:dd-MMM-yyyy}").Width(150);
        columns.Bound(c => c.BackToBackShippedDate).Format("{0:dd-MMM-yyyy}").Width(150);

        columns.Bound(c => c.SightDays).Width(80);

        columns.Bound(c => c.LCTypeTitle).Width(100);
    })
    .Resizable(r => r.Columns(true))
    .Filterable()
    .Pageable(p => p.PageSize(10))
    .Selectable()
    .Sortable()
    .Scrollable(x => x.Height("auto"))
    .ClientEvents(events => events.OnDataBound("onDataBound"))
    )
</div>

<script type="text/javascript">

    var $exportLink = $('#exportLink');
    var href = $exportLink.attr('href');

    function onDataBound() {
        var grid = $(this).data('tGrid');

        href = href.replace(/column=([^&]*)/, 'column=' + unCheckedList);
        href = href.replace(/orderBy=([^&]*)/, 'orderBy=' + (grid.orderBy || '~'));
        href = href.replace(/filter=(.*)/, 'filter=' + (grid.filterBy || '~'));
        $exportLink.attr('href', href);
    }

    var unCheckedList = new Array();

    $(document).ready(function () {

        $(document).delegate('#BackToBackLCGrid_contextMenu [type=checkbox]', 'click', function () {

            var index = $(this).data("field");
            var column = $("#BackToBackLCGrid").data("tGrid").columns[index];
            if (!$(this).is(':checked')) {
                if ($.inArray(column.member, unCheckedList) == -1)
                    unCheckedList.push(column.member);
            }
            else {
                $.each(unCheckedList, function (key, value) {
                    if (value == column.member) {
                        unCheckedList.splice(key, 1);
                    }
                });
            }

            href = href.replace(/column=([^&]*)/, 'column=' + unCheckedList);
            $exportLink.attr('href', href);
        })
    });

</script>